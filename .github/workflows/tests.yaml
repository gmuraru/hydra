name: Tests

on:
  push:
    branches:
      - main

  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  python-linting:
    strategy:
      max-parallel: 1
      matrix:
        os: [ubuntu-latest]
        python-version: [3.10]

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Upgrade pip
        run: |
          pip install --upgrade --user pip

      - name: Get pip cache dir
        id: pip-cache
        run: |
          echo "::set-output name=dir::$(pip cache dir)"

      - name: pip cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-pip-py${{ matrix.python-version }}-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-py${{ matrix.python-version }}-

      - id: file_changes # get changed files.
        uses: jitterbit/get-changed-files@v1
        with:
          format: space-delimited

      - uses: pre-commit/action@v2.0.3
        with:
          extra_args: --files ${{ steps.file_changes.outputs.all }} # apply only to changed files.

      - name: Check docstring coverage
        run: |
          pip install interrogate
          interrogate -mvp src/ -f 80

      - name: Scan for security issues
        run: |
          pip install bandit safety
          bandit -r src
          safety check


  python-tests:
    needs: [python-linting]
    strategy:
      max-parallel: 2
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: [3.10]

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Upgrade pip
        run: |
          pip install --upgrade --user pip

      - name: Get pip cache dir
        id: pip-cache
        run: |
          echo "::set-output name=dir::$(pip cache dir)"

      - name: pip cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-pip-py${{ matrix.python-version }}-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-py${{ matrix.python-version }}-

      - name: Install dependencies
        run: |
          hash -r
          pip install -e .
        shell: bash


      - name: Run tests
        run: |
          pytest tests/ -n 8 -x --durations=50

      - name: Run codecov
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          bash <(curl -s https://codecov.io/bash) -t ${{ secrets.CODECOV_TOKEN }} -X gcov
